{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./blocks/section/main.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["__","wp","i18n","registerBlockType","blocks","blockEditor","RichText","useBlockProps","blockSlug","blockName","MAMD_PLUGIN_INFO","slug","title","attributes","backgroundColor","default","type","someText","source","selector","category","edit","setAttributes","blockProps","className","e","target","value","save"],"mappings":"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","file":"./section/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./blocks/section/main.js\");\n","/**\r\n * Registers a new block provided a unique name and an object defining its behavior.\r\n * @see https://github.com/WordPress/gutenberg/tree/master/blocks#api\r\n */\r\nconst {__} = wp.i18n; // Import __() from wp.i18n\r\nconst {registerBlockType} = wp.blocks; // Import registerBlockType() from wp.blocks\r\nconst {RichText,useBlockProps} = wp.blockEditor;\r\n/**\r\n * Every block starts by registering a new block type definition.\r\n * @see https://wordpress.org/gutenberg/handbook/block-api/\r\n */\r\nconst blockSlug = 'section';\r\nconst blockName = 'Section';\r\nregisterBlockType(`${MAMD_PLUGIN_INFO.slug}/${blockSlug}`, {\r\n    /**\r\n     * This is the display title for your block, which can be translated with `i18n` functions.\r\n     * The block inserter will show this name.\r\n     */\r\n    title: __('Gutenberg ' + blockName),\r\n\r\n    attributes: {\r\n        backgroundColor: {\r\n            default: \"yellow\",\r\n            type:\"string\"\r\n        },\r\n        someText: {\r\n            type: 'string',\r\n            source: 'html',\r\n            selector: 'h2',\r\n            default:\"Write Something\"\r\n        },\r\n    },\r\n\r\n    /**\r\n     * Blocks are grouped into categories to help users browse and discover them.\r\n     * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\r\n     */\r\n    category: 'widgets', //MAMD_PLUGIN_INFO.category_slug\r\n    /**\r\n     * Optional block extended support features.\r\n     */\r\n    // supports: {\r\n    //     // Removes support for an HTML mode.\r\n    //     html: false,\r\n    // },\r\n    /**\r\n     * The edit function describes the structure of your block in the context of the editor.\r\n     * This represents what the editor will render when the block is used.\r\n     * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#edit\r\n     *\r\n     * @param {Object} [props] Properties passed from the editor.\r\n     * @return {Element}       Element to render.\r\n     */\r\n    edit: function ({attributes,setAttributes}) {\r\n        const blockProps = useBlockProps( {\r\n            className: 'my-random-classname',\r\n        } );\r\n        \r\n        return (\r\n            <>\r\n            <input type=\"color\" onChange={(e)=>setAttributes({backgroundColor:e.target.value})} />\r\n          <RichText\r\n                {...blockProps}\r\n                tagName=\"h2\" // The tag here is the element output and editable in the admin\r\n                value={ attributes.someText } // Any existing content, either from the database or an attribute default\r\n                allowedFormats={ [ 'core/bold', 'core/italic' ] } // Allow the content to be made bold or italic, but do not allow other formatting options\r\n                onChange={ ( someText ) => setAttributes( { someText } ) } // Store updated content as a block attribute\r\n                placeholder={ __( 'Heading...' ) } // Display this text before any content has been added by the user\r\n            />  \r\n            </>\r\n        );\r\n    },\r\n\r\n    /**\r\n     * The save function defines the way in which the different attributes should be combined\r\n     * into the final markup, which is then serialized by Gutenberg into `post_content`.\r\n     * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#save\r\n     *\r\n     * @return {Element}       Element to render.\r\n     */\r\n    save: function ({attributes}) {\r\n        const blockProps = useBlockProps.save();\r\n        \r\n        return <RichText.Content { ...blockProps } tagName=\"h2\" value={ attributes.someText } />;\r\n    },\r\n});\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}
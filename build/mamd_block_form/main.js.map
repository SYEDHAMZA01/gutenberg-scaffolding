{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./blocks/mamd_block_form/main.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["__","wp","i18n","registerBlockType","blocks","title","category","supports","html","edit","props","className","save"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;IACOA,E,GAAMC,EAAE,CAACC,I,CAATF,E,EAAe;;IACfG,iB,GAAqBF,EAAE,CAACG,M,CAAxBD,iB,EAAgC;;AAEvC;AACA;AACA;AACA;;AACAA,iBAAiB,CAAC,qBAAD,EAAwB;AACrC;AACJ;AACA;AACA;AACIE,OAAK,EAAEL,EAAE,CAAC,gBAAD,CAL4B;;AAOrC;AACJ;AACA;AACA;AACIM,UAAQ,EAAE,SAX2B;;AAYrC;AACJ;AACA;AACIC,UAAQ,EAAE;AACN;AACAC,QAAI,EAAE;AAFA,GAf2B;;AAmBrC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAI,EAAE,cAAUC,KAAV,EAAiB;AACnB,WACI;AAAG,eAAS,EAAEA,KAAK,CAACC;AAApB,OAAgCX,EAAE,CAAE,wBAAF,CAAlC,CADJ;AAGH,GA/BoC;;AAiCrC;AACJ;AACA;AACA;AACA;AACA;AACA;AACIY,MAAI,EAAE,cAAUF,KAAV,EAAiB;AACnB,WACI,oFAAIV,EAAE,CAAE,0BAAF,CAAN,CADJ;AAGH;AA5CoC,CAAxB,CAAjB,C;;;;;;;;;;;ACXA,aAAa,wCAAwC,EAAE,I","file":"./mamd_block_form/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./blocks/mamd_block_form/main.js\");\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n * @see https://github.com/WordPress/gutenberg/tree/master/blocks#api\n */\nconst {__} = wp.i18n; // Import __() from wp.i18n\nconst {registerBlockType} = wp.blocks; // Import registerBlockType() from wp.blocks\n\n/**\n * Every block starts by registering a new block type definition.\n * @see https://wordpress.org/gutenberg/handbook/block-api/\n */\nregisterBlockType('gutenform/gutenform', {\n    /**\n     * This is the display title for your block, which can be translated with `i18n` functions.\n     * The block inserter will show this name.\n     */\n    title: __('Gutenberg Form'),\n\n    /**\n     * Blocks are grouped into categories to help users browse and discover them.\n     * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n     */\n    category: 'widgets',\n    /**\n     * Optional block extended support features.\n     */\n    supports: {\n        // Removes support for an HTML mode.\n        html: false,\n    },\n    /**\n     * The edit function describes the structure of your block in the context of the editor.\n     * This represents what the editor will render when the block is used.\n     * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#edit\n     *\n     * @param {Object} [props] Properties passed from the editor.\n     * @return {Element}       Element to render.\n     */\n    edit: function (props) {\n        return (\n            <p className={props.className}>{__( 'Hello from the editor!' )}</p>\n        );\n    },\n\n    /**\n     * The save function defines the way in which the different attributes should be combined\n     * into the final markup, which is then serialized by Gutenberg into `post_content`.\n     * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#save\n     *\n     * @return {Element}       Element to render.\n     */\n    save: function (props) {\n        return (\n            <p>{__( 'Hello from the frontend!' )}</p>\n        );\n    },\n});\n","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}